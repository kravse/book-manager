"""empty message

Revision ID: 249cb1fefe3a
Revises: 
Create Date: 2025-03-06 11:34:52.711915

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '249cb1fefe3a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pw_hash', sa.LargeBinary(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_name'), ['name'], unique=True)

    op.create_table('user_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('u_id', sa.Integer(), nullable=False),
    sa.Column('sess_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_session', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_session_sess_id'), ['sess_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_session_u_id'), ['u_id'], unique=False)

    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_read', sa.DateTime(), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('cover_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('review', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('num_times_read', sa.Integer(), nullable=True),
    sa.Column('open_library_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('first_publish_year', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_library_key', name='unique_open_library_key')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book')
    with op.batch_alter_table('user_session', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_session_u_id'))
        batch_op.drop_index(batch_op.f('ix_user_session_sess_id'))

    op.drop_table('user_session')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_name'))

    op.drop_table('user')
    # ### end Alembic commands ###
